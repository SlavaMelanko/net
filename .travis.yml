language: cpp

notifications:
  email: false

os: linux
dist: focal

cache:
  directories:
    - ${TRAVIS_BUILD_DIR}/deps

jobs:
  include:

    #############################################################################
    # Clang on macOS
    #

    - os: osx
      env:
        - CXX_COMPILER=clang++
        - BUILD_TYPE=Release
      osx_image: xcode12.2
      compiler: clang

    - os: osx
      env:
        - CXX_COMPILER=clang++
        - BUILD_TYPE=Debug
      osx_image: xcode12.3
      compiler: clang

    #############################################################################
    # GCC on Linux
    #

    - env:
        - CXX_COMPILER=g++-10
        - BUILD_TYPE=Release
      addons: &gcc10
        apt:
          packages:
            - g++-10
          sources:
            - ubuntu-toolchain-r-test

    - env:
        - CXX_COMPILER=g++-10
        - BUILD_TYPE=Debug
        - ENABLE_COVERAGE=ON
      addons: *gcc10

install:
  # Set the $CXX variable properly.
  - export CXX=$CXX_COMPILER
  - $CXX --version
  # Dependencies required by the CI are installed in $TRAVIS_BUILD_DIR/deps/.
  - DEPS_DIR=$TRAVIS_BUILD_DIR/deps
  - mkdir -p $DEPS_DIR && cd $DEPS_DIR
  # Travis machines have 2 cores
  - JOBS=2
  # Install the latest CMake (unless already installed on macOS).
  - |
    if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      CMAKE_VERSION=3.16.5
      CMAKE_URL="https://cmake.org/files/v${CMAKE_VERSION%.[0-9]}/cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz"
      mkdir cmake && travis_retry wget --no-check-certificate -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
    else
      brew update
      brew install cmake || brew upgrade cmake
    fi
  - cmake --version
  # Install Conan package manager.
  - |
    if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      sudo pip install conan
    else
      brew install conan || brew upgrade conan
    fi
  - conan profile new default --detect
  - |
    if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      conan profile update settings.compiler.libcxx=libstdc++11 default
    fi
  - conan --version
  - conan profile show default

before_script:
  - cd ${TRAVIS_BUILD_DIR}
  - mkdir -p build && cd build
  - cmake .. -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DENABLE_COVERAGE=$ENABLE_COVERAGE

script:
  - cmake --build . --config $BUILD_TYPE -- -j $JOBS

after_success:
  - ctest --extra-verbose -C $BUILD_TYPE --parallel $JOBS
  - |
    if [ "$ENABLE_COVERAGE" == "ON" ]; then
      echo "Sending code coverage report..."
      bash <(curl -s https://codecov.io/bash)
    fi
